@model PublicTransportGallery.ViewModels.ImageDetailsViewModels
@using PublicTransportGallery.Helpers
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Szczegóły zdjęcia";
}


<div class="container pp-section">
    <!-- #region Obszar zdjęcia + informacje -->
    <div class="h3 font-weight-normal">@Model.ModelVehice</div>
    <hr />
    <img style="width: 100%;" src="@Url.BusImgPath(Model.ImageName)" />
    <div class="row mt-5">
        <div class="col-md-3">
            <div class="h5">@Html.LabelFor(model => model.UserName)</div>
            @*<a class="mr-1 badge badge-primary" href="#">Nature</a><a class="mr-1 badge badge-primary" href="#">Model</a><a class="badge badge-primary" href="#">Flower</a>*@
            <a href="@Url.Action("DetailsUser","User", new { Username = Model.UserName})">@Model.UserName</a>
            <div class="h5 pt-4">@Html.LabelFor(model => model.DateAdd)</div>
            <p>@Model.DateAdd</p>
        </div>
        <div class="col-md-9">
            <p>
                @Html.LabelFor(model => model.YearProduction) @Model.YearProduction @if (Model.YearEndProduction != null)
                {<span>- @Model.YearEndProduction </span>}
            </p>
            <p>@Model.Description</p>
        </div>
    </div>
    <!-- #endregion -->
    <!-- #region kontrolka dodawania komentarzy -->
    <h2>Sekcja komentarzy</h2>
    <hr />
    @if (User.Identity.IsAuthenticated)
    {
    @*<form id="CreateCommentForm">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.InsertComment.InsertContent, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-12">
                    <textarea class="form-control" name="@Html.NameFor(model => model.InsertComment.InsertContent)" id="@Html.NameFor(model => model.InsertComment.InsertContent)" rows="3"></textarea>
                    @Html.ValidationMessageFor(model => model.InsertComment.InsertContent, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Dodaj komentarz" class="btn btn-primary" id="btnAddComment" />
                </div>
            </div>
        </div>
    </form>
        *@
        @Html.Partial("_InsertComment", Model.CommentModel, new ViewDataDictionary(ViewData) { { "ImageID", Model.ImageId } })
    }
    <!-- #endregion -->
    <!-- #region sekcja komentarzy -->
    <div class="comment-section">
        @foreach (var comment in Model.CommentList)
        {
            <div class="card">
                <div class="card-header">
                    <span>@comment.Username</span>
                </div>
                <div class="card-body">
                    <blockquote class="blockquote mb-0">
                        <p class="comment-text">@comment.ContentText</p>
                        <footer class="blockquote-footer"><span class="comment-text-info">Dodano: @comment.DateAdd</span> </footer>
                    </blockquote>
                </div>
            </div>
            <br />
        }
    </div>
</div>
<!-- #endregion -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script>
    $("#btnAddComment").click(function () {
        var form = $('#CreateCommentForm').serialize();
            $.ajax({
                url: '/Comment/AddComment/',
                type: 'POST',
                dataType: "json",
                data: form,
                success: function (data) {
                    if (data != null && data.Success) {
                        alert(data.Message);
                    } else {
                        // DoSomethingElse()
                        alert(data.Message);
                    }
                },
                error: function (data) {
                    alert("error!"); 
                }
            });
    });
</script>*@